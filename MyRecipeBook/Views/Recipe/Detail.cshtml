@model MyRecipeBook.Models.Recipe

@{
    ViewData["Title"] = "Details";
}

<div class="card">

    <div class="card-body">
        <div class="d-flex">
            <h1>@Html.DisplayFor(model => model.Name)</h1>
            @if (User.Identity.IsAuthenticated)
            {
                @if ((bool)ViewData["Bookmarked"])
                {
                    <form method="post" asp-controller="Bookmark" asp-action="RemoveBookmark">
                        <input type="hidden" asp-for="Id" />
                        <button type="submit">
                            <i class="bi bi-bookmark-fill"></i>
                        </button>
                    </form>
                }
                else
                {
                    <form method="post" asp-controller="Bookmark" asp-action="AddBookmark">
                        <input type="hidden" asp-for="Id" />
                        <button type="submit">
                            <i class="bi bi-bookmark"></i>
                        </button>
                    </form>
                }
            }

        </div>

        <p class="w-75">@Html.DisplayFor(model => model.Description)</p>
        <p>Recipe category: @Html.DisplayFor(model => model.Category)</p>
        <p>
            <span class="material-symbols-outlined">
                restaurant
            </span>
            Preparation time: @Html.DisplayFor(model => model.PreparationTime)
        </p>
        <p>
            <span class="material-symbols-outlined">
                cooking
            </span>
            Cooking time: @Html.DisplayFor(model => model.CookTime)
        </p>
        <p>
            <span class="material-symbols-outlined">
                restaurant_menu
            </span>
            Number of servings: @Html.DisplayFor(model => model.Serves)
        </p>
    </div>
    <div class="d-lg-flex">
        <div class="card-body">
            <img src="@Model.Image" class="card-image image-fluid rounded mw-100" />
        </div>
        <div class="card-body">
            <h5>Ingredients</h5>
            <ul class="list-group list-group-flush">
                <!-- Loops through the properties of the Ingredient entity-->
                @foreach (var item in Model.Ingredients.GetType().GetProperties())
                {
                    @if (item.Name.StartsWith("Ingredient") && item.GetValue(Model.Ingredients) != null)
                    {
                        <li class="list-group-item">@item.GetValue(Model.Ingredients)</li>
                    }
                }
            </ul>
        </div>
    </div>

    <div class="card-body">
        <h5>Recipe instructions</h5>
        <ol class="w-75">
            @foreach (var item in Model.Steps.GetType().GetProperties())
            {
                @if (item.Name.StartsWith("Step") && item.GetValue(Model.Steps) != null)
                {
                    <li>@item.GetValue(Model.Steps)</li>
                }
            }
        </ol>
    </div>
</div>

@if (User.Identity.IsAuthenticated && User.IsInRole("Admin"))
{
    <div>
        <a asp-action="Edit" asp-route-id="@Model.Id">Edit</a> |
        <a asp-action="Delete" asp-route-id="@Model.Id">Delete</a> |
        <a asp-action="Index">Back to List</a>
    </div>
}

