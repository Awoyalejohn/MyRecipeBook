@model MyRecipeBook.Models.ViewModels.RecipeFilterViewModel

@{
    ViewData["Title"] = "Recipes";
}

<h1>Recipes</h1>

<a asp-area="" asp-controller="Recipe" asp-action="Create">Create</a>

<form asp-controller="Recipe" asp-action="Index" method="get">

   
    <p>
        <select asp-for="Category" asp-items="Model.Categories">
            <option value="">--Category--</option>
        </select>
        
        <select asp-for="Cuisine" asp-items="Model.Cuisines">
            <option value="">--Cuisine--</option>
        </select>

        Name: <input type="text" asp-for="SearchString" />
        <button type="submit">Search</button>
    </p>
</form>

<div class="album py-5 bg-body-tertiary">
    <div class="container">

        <div class="row row-cols-1 row-cols-sm-2 row-cols-md-3 g-3">

            @if (Model.Recipes.Count > 0)
            {
                @foreach (var item in Model.Recipes)
                {
                    <div class="col">
                        <div class="card shadow-sm">
                            <img src="@item.Image" class="img-fluid">
                            <div class="card-body">
                                <h1>@Html.DisplayFor(modelItem => item.Name)</h1>
                                <div class="d-flex justify-content-between align-items-center">
                                    <div class="btn-group">
                                        <a asp-area="" asp-controller="Recipe" asp-action="Detail" asp-route-id="@item.Id" class="btn btn-sm btn-outline-secondary">View</a>
                                        <a asp-area="" asp-controller="Recipe" asp-action="Edit" asp-route-id="@item.Id" class="btn btn-sm btn-outline-secondary">Edit</a>
                                        <a asp-area="" asp-controller="Recipe" asp-action="Delete" asp-route-id="@item.Id" class="btn btn-sm btn-outline-secondary">Delete</a>
                                    </div>
                                    <small class="text-body-secondary">9 mins</small>
                                </div>
                            </div>
                        </div>
                    </div>
                }
            }
            else
            {
                <p>There are no recipes</p>
            }

        </div>

        @{
            var prevDisabled = !Model.Recipes.HasPreviousPage ? "disabled" : "";
            var nextDisabled = !Model.Recipes.HasNextPage ? "disabled" : "";
        }

        <a asp-action="Index" asp-route-pageNumber="@(Model.Recipes.PageIndex - 1)"
           asp-route-category="@ViewData["category"]" asp-route-cuisine="@ViewData["cuisine"]"
           asp-route-searchString="@ViewData["searchString"]"
        class="btn btn-primary @prevDisabled">Previous</a>
        
        <a asp-action="Index" asp-route-pageNumber="@(Model.Recipes.PageIndex + 1)"
           asp-route-category="@ViewData["category"]" asp-route-cuisine="@ViewData["cuisine"]"
           asp-route-searchString="@ViewData["searchString"]"
        class="btn btn-primary @nextDisabled">Next</a>

    </div>
</div>
